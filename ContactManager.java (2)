import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

public class ContactManager {
    private static ArrayList<Contact> contacts = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int choice;
        do {
            System.out.println("\n--- CONTACT MANAGEMENT APP ---");
            System.out.println("1. Add new contact");
            System.out.println("2. List all contacts");
            System.out.println("3. Search contact");
            System.out.println("0. Exit");
            try {
                System.out.print("Choose an option: ");
                choice = scanner.nextInt();
                scanner.nextLine(); // consume newline
                switch (choice) {
                    case 1 -> addContact();
                    case 2 -> listContacts();
                    case 3 -> searchContact();
                    case 0 -> System.out.println("Exiting...");
                    default -> System.out.println("Invalid option! Try again.");
                }
            } catch (InputMismatchException e) {
                System.out.println("Please enter a valid number!");
                scanner.nextLine();
                choice = -1;
            }
        } while (choice != 0);
    }

    private static void addContact() {
        System.out.print("Enter full name: ");
        String fullName = scanner.nextLine();

        String phoneNumber;
        while (true) {
            System.out.print("Enter phone number: ");
            phoneNumber = scanner.nextLine();
            if (phoneNumber.matches("\\d+")) break;
            else System.out.println("Phone number must be numeric!");
        }

        System.out.print("Enter email: ");
        String email = scanner.nextLine();

        System.out.print("Enter address: ");
        String address = scanner.nextLine();

        System.out.print("Enter birth date (dd/mm/yyyy): ");
        String birthDate = scanner.nextLine();

        System.out.print("Enter group (Family/Friends/Work): ");
        String group = scanner.nextLine();

        Contact newContact = new Contact(fullName, phoneNumber, email, address, birthDate, group);
        contacts.add(newContact);
        System.out.println("Contact added successfully!");
    }

    private static void listContacts() {
        System.out.println("\n--- CONTACT LIST ---");
        System.out.println(contacts.size() + " total contacts\n");
        if (contacts.isEmpty()) {
            System.out.println("No contacts found.");
        } else {
            for (Contact c : contacts) {
                System.out.println(c);
            }
        }
    }

    // -------------------------------
    // FUNCTIONALITY 1: SEARCH CONTACT
    // -------------------------------
    private static void searchContact() {
        if (contacts.isEmpty()) {
            System.out.println("No contacts to search.");
            return;
        }

        System.out.println("\nSearch by:");
        System.out.println("1. Full Name");
        System.out.println("2. Phone Number");
        System.out.println("3. Email");
        System.out.println("4. Address");
        System.out.println("5. Birth Date");
        System.out.println("6. Group");
        System.out.print("Choose an option (1-6): ");
        int searchChoice = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Enter search value: ");
        String query = scanner.nextLine().trim();

        Contact foundContact = null;
        for (Contact c : contacts) {
            boolean match = switch (searchChoice) {
                case 1 -> c.fullName.equalsIgnoreCase(query);
                case 2 -> c.phoneNumber.equalsIgnoreCase(query);
                case 3 -> c.email.equalsIgnoreCase(query);
                case 4 -> c.address.equalsIgnoreCase(query);
                case 5 -> c.birthDate.equalsIgnoreCase(query);
                case 6 -> c.group.equalsIgnoreCase(query);
                default -> false;
            };
            if (match) {
                foundContact = c;
                break;
            }
        }

        if (foundContact == null) {
            System.out.println("No contact found with the given criteria.");
            return;
        }

        System.out.println("\nContact found:\n" + foundContact);

        System.out.println("\nWhat would you like to do?");
        System.out.println("1. Delete this contact");
        System.out.println("2. Edit this contact");
        System.out.println("3. Do nothing");
        System.out.print("Choose an option: ");
        int actionChoice = scanner.nextInt();
        scanner.nextLine();

        switch (actionChoice) {
            case 1 -> deleteContact(foundContact);
            case 2 -> editContact(foundContact);
            case 3 -> System.out.println("No action taken.");
            default -> System.out.println("Invalid option.");
        }
    }

    // -------------------------------
    // FUNCTIONALITY 2: DELETE CONTACT
    // -------------------------------
    private static void deleteContact(Contact c) {
        contacts.remove(c);
        System.out.println("Contact deleted successfully.");
    }

    // -------------------------------
    // FUNCTIONALITY 3: EDIT CONTACT
    // -------------------------------
    private static void editContact(Contact c) {
        System.out.println("Editing contact. Press Enter to keep current value.");

        System.out.print("Full Name (" + c.fullName + "): ");
        String input = scanner.nextLine().trim();
        if (!input.isEmpty()) c.fullName = input;

        System.out.print("Phone Number (" + c.phoneNumber + "): ");
        input = scanner.nextLine().trim();
        if (!input.isEmpty()) {
            if (input.matches("\\d+")) {
                c.phoneNumber = input;
            } else {
                System.out.println("Invalid phone number. Keeping old value.");
            }
        }

        System.out.print("Email (" + c.email + "): ");
        input = scanner.nextLine().trim();
        if (!input.isEmpty()) c.email = input;

        System.out.print("Address (" + c.address + "): ");
        input = scanner.nextLine().trim();
        if (!input.isEmpty()) c.address = input;

        System.out.print("Birth Date (" + c.birthDate + "): ");
        input = scanner.nextLine().trim();
        if (!input.isEmpty()) c.birthDate = input;

        System.out.print("Group (" + c.group + "): ");
        input = scanner.nextLine().trim();
        if (!input.isEmpty()) c.group = input;

        System.out.println("Contact updated successfully.");
    }
}
